function HandleStartGameButtonCo()
	updatePhaseUI("Loading", "Please wait")

	-- Hide tutorial panel
	UI.hide("TutorialPanel")

	NumberOfPlayers = #getSeatedPlayers()

	if NumberOfPlayers < 3 then
		-- This simulates the other players, which are always ready
		NumberOfReadyPlayers = 3 - NumberOfPlayers
		-- For now we allow starting the game even with less than 3 players
		NumberOfPlayers = 3
	end

	-- UnreadyAllPlayers()

	-- Destroy Setup Board
	SetupBoard.destruct()

	-------------------[[ PREPARE DECKS ]]-------------------

	-- [[AGE 1 DECKS SETUP]]
	for bagKey, bagObject in pairs(Age1DeckBags) do
		-- Extract player count from key name (e.g., "Age1_3p" → 3)
		local playersForThisBag = tonumber(string.match(bagKey, "(%d+)p$"))
		if playersForThisBag and playersForThisBag <= NumberOfPlayers then
			local targetPos = DeckZones.Age.Age1.getPosition()
			local targetRot = DeckZones.Age.Age1.getRotation() + vector(0, 0, 180)

			bagObject.takeObject({
				position = targetPos,
				rotation = targetRot,
				smooth = false
			})
		end
	end

	-- [[AGE 2 DECKS SETUP]]
	for bagKey, bagObject in pairs(Age2DeckBags) do
		-- Extract player count from key name (e.g., "Age2_3p" → 3)
		local playersForThisBag = tonumber(string.match(bagKey, "(%d+)p$"))
		if playersForThisBag and playersForThisBag <= NumberOfPlayers then
			local targetPos = DeckZones.Age.Age2.getPosition()
			local targetRot = DeckZones.Age.Age2.getRotation() + vector(0, 0, 180)

			bagObject.takeObject({
				position = targetPos,
				rotation = targetRot,
				smooth = false
			})
		end
	end

	-- [[AGE 3 DECKS SETUP]]
	for bagKey, bagObject in pairs(Age3DeckBags) do
		-- Extract player count from key name (e.g., "Age3_3p" → 3)
		local playersForThisBag = tonumber(string.match(bagKey, "(%d+)p$"))
		if playersForThisBag and playersForThisBag <= NumberOfPlayers then
			local targetPos = DeckZones.Age.Age3.getPosition()
			local targetRot = DeckZones.Age.Age3.getRotation() + vector(0, 0, 180)

			bagObject.takeObject({
				position = targetPos,
				rotation = targetRot,
				smooth = false
			})
		end
	end

	-- [[GUILD DECKS SETUP]]
	for bagKey, bagObject in pairs(GuildBags) do
		if bagKey == "Base" then
			bagObject.takeObject({
				position = DeckZones.Guild.getPosition(),
				rotation = DeckZones.Guild.getRotation() + vector(0, 0, 180),
				smooth = false
			})
		end

		-- Checks if "Cities" is used, it adds 2 guild cards
		if bagKey == "Cities" and ExpansionConfig.Cities then
			bagObject.takeObject({
				position = DeckZones.Guild.getPosition(),
				rotation = DeckZones.Guild.getRotation() + vector(0, 0, 180),
				smooth = false
			})
		end

		-- Checks if "Promo Guilds" is used, it adds 4 guild cards
		if bagKey == "Promo" and ExpansionConfig.PromoGuilds then
			bagObject.takeObject({
				position = DeckZones.Guild.getPosition(),
				rotation = DeckZones.Guild.getRotation() + vector(0, 0, 180),
				smooth = false
			})
		end

		-- Checks if "Edifice" is used, it adds 1 guild card
		if bagKey == "Edifice" and ExpansionConfig.Edifice then
			bagObject.takeObject({
				position = DeckZones.Guild.getPosition(),
				rotation = DeckZones.Guild.getRotation() + vector(0, 0, 180),
				smooth = false
			})
		end

		-- Checks if "Leaders" is used, it adds 1 guild card
		if bagKey == "Leaders" and ExpansionConfig.Leaders.Base then
			bagObject.takeObject({
				position = DeckZones.Guild.getPosition(),
				rotation = DeckZones.Guild.getRotation() + vector(0, 0, 180),
				smooth = false
			})
		end
	end

	-- [[LEADER DECKS SETUP]]
	if ExpansionConfig.Leaders.Base then
		for bagKey, bagObject in pairs(LeaderBags) do
			if bagKey == "Base" then
				bagObject.takeObject({
					position = DeckZones.Leaders.getPosition(),
					rotation = DeckZones.Leaders.getRotation() + vector(0, 0, 180),
					smooth = false
				})
			end

			-- Checks if "Promo" is used, it adds 1 leader card
			if bagKey == "Promo" and ExpansionConfig.Leaders.Promo then
				bagObject.takeObject({
					position = DeckZones.Leaders.getPosition(),
					rotation = DeckZones.Leaders.getRotation() + vector(0, 0, 180),
					smooth = false
				})
			end

			-- Checks if "Expert" is used, it adds 15 leader cards
			if bagKey == "Expert" and ExpansionConfig.Leaders.Expert then
				bagObject.takeObject({
					position = DeckZones.Leaders.getPosition(),
					rotation = DeckZones.Leaders.getRotation() + vector(0, 0, 180),
					smooth = false
				})
			end

			-- Checks if "Cities" is used, it adds 6 leader cards
			if bagKey == "Cities" and ExpansionConfig.Cities then
				bagObject.takeObject({
					position = DeckZones.Leaders.getPosition(),
					rotation = DeckZones.Leaders.getRotation() + vector(0, 0, 180),
					smooth = false
				})
			end
		end
	end

	-- [[CITIES DECKS SETUP]]
	for bagKey, bagObject in pairs(CitiesBags) do
		if ExpansionConfig.Cities then
			bagObject.takeObject({
				position = DeckZones.Cities[bagKey].getPosition(),
				rotation = DeckZones.Cities[bagKey].getRotation() + vector(0, 0, 180),
				smooth = false
			})
		end
	end

	-- [[ARMADA DECKS SETUP]]
	for bagKey, bagObject in pairs(ArmadaBags) do
		if ExpansionConfig.Armada then
			bagObject.takeObject({
				position = DeckZones.Armada[bagKey].getPosition(),
				rotation = DeckZones.Armada[bagKey].getRotation() + vector(0, 0, 180),
				smooth = false
			})
		end
	end

	-- [[ISLAND DECKS SETUP]]
	for bagKey, bagObject in pairs(IslandBags) do
		if ExpansionConfig.Armada then
			bagObject.takeObject({
				position = DeckZones.Island[bagKey].getPosition(),
				rotation = DeckZones.Island[bagKey].getRotation() + vector(0, 0, 180),
				smooth = false
			})
		end
	end

	-- [[EDIFICE SETUP]]
	if ExpansionConfig.Edifice then
		EdificeBags.ProjectAge1.randomize()
		EdificeBags.ProjectAge1.takeObject({
			position = vector(5, 0.5, 0)
		})

		EdificeBags.ProjectAge2.randomize()
		EdificeBags.ProjectAge2.takeObject({
			position = vector(0, 0.5, 0)
		})

		EdificeBags.ProjectAge3.randomize()
		EdificeBags.ProjectAge3.takeObject({
			position = vector(-5, 0.5, 0)
		})

		local function PlayerToPawn(n)
	    local map = {
	        [3] = 2,
	        [4] = 3,
	        [5] = 3,
	        [6] = 4,
	        [7] = 5
	    }
	    return map[n]
		end

		local PawnsToSpawn = PlayerToPawn(NumberOfPlayers)

		-- Spawn pawns on project cards
		for i = 1, PawnsToSpawn do
			EdificeBags.PawnAge1.takeObject({
				position = vector(5, 5, -4 + (i * 1.2)),
				rotation = vector(0, 90, 0),
				smooth = false
			})

			EdificeBags.PawnAge2.takeObject({
				position = vector(0, 5, -4 + (i * 1.2)),
				smooth = false
			})

			EdificeBags.PawnAge3.takeObject({
				position = vector(-5, 5, -4 + (i * 1.2)),
				smooth = false
			})
		end
	end

	for i = 0, 200 do
		coroutine.yield(0)
	end

	-------------------[[ SHUFFLE DECKS ]]-------------------

	-- [[SHUFFLE CITIES]]
	local citiesDecksToShuffle = {
		DeckZones.Cities.Age1,
		DeckZones.Cities.Age2,
		DeckZones.Cities.Age3
	}

	for _, deck in ipairs(citiesDecksToShuffle) do
		if deck and deck.getObjects then
			for _, item in ipairs(deck.getObjects()) do
				item.randomize()
			end
		end
	end

	-- [[SHUFFLE ARMADA]]
	local armadaDecksToShuffle = {
		DeckZones.Armada.Age1,
		DeckZones.Armada.Age2,
		DeckZones.Armada.Age3
	}

	for _, deck in ipairs(armadaDecksToShuffle) do
		if deck and deck.getObjects then
			for _, item in ipairs(deck.getObjects()) do
				item.randomize()
			end
		end
	end

	-- [[SHUFFLE GUILDS]]
	local GuildDeck = DeckZones.Guild.getObjects()
	for _, item in ipairs(GuildDeck) do
		if item.randomize then
			item.randomize()
		end
	end

	for i = 0, 200 do
		coroutine.yield(0)
	end

	-------------------[[ INSERT CARDS INTO DECKS ]]-------------------

	-- [[INSERT ARMADA CARDS]]
	local AgeDecks = {
		{
			sourceZone = DeckZones.Armada.Age1,
			targetZone = DeckZones.Age.Age1,
			playersRequired = NumberOfPlayers
		},
		{
			sourceZone = DeckZones.Armada.Age2,
			targetZone = DeckZones.Age.Age2,
			playersRequired = NumberOfPlayers
		},
		{
			sourceZone = DeckZones.Armada.Age3,
			targetZone = DeckZones.Age.Age3,
			playersRequired = NumberOfPlayers
		}
	}

	for _, deckConfig in ipairs(AgeDecks) do
		if deckConfig.sourceZone and deckConfig.targetZone then
			local deckObjects = deckConfig.sourceZone.getObjects()

			for _, item in ipairs(deckObjects) do
				if item.takeObject then
					for i = 1, deckConfig.playersRequired do
						item.takeObject({
							position = deckConfig.targetZone.getPosition(),
							rotation = deckConfig.targetZone.getRotation() + vector(0, 0, 180),
							smooth = false
						})
					end
				end
			end
		else
			print("sourceZone/targetZone invalid for Armada")
		end
	end

	-- [[INSERT CITIES CARDS]]
	local AgeDecks = {
		{
			sourceZone = DeckZones.Cities.Age1,
			targetZone = DeckZones.Age.Age1,
			playersRequired = NumberOfPlayers
		},
		{
			sourceZone = DeckZones.Cities.Age2,
			targetZone = DeckZones.Age.Age2,
			playersRequired = NumberOfPlayers
		},
		{
			sourceZone = DeckZones.Cities.Age3,
			targetZone = DeckZones.Age.Age3,
			playersRequired = NumberOfPlayers
		}
	}

	for _, deckConfig in ipairs(AgeDecks) do
		if deckConfig.sourceZone and deckConfig.targetZone then
			local deckObjects = deckConfig.sourceZone.getObjects()

			for _, item in ipairs(deckObjects) do
				if item.takeObject then
					for i = 1, deckConfig.playersRequired do
						item.takeObject({
							position = deckConfig.targetZone.getPosition(),
							rotation = deckConfig.targetZone.getRotation() + vector(0, 0, 180),
							smooth = false
						})
					end
				end
			end
		else
			print("sourceZone/targetZone invalid for Cities")
		end
	end

	-- [[INSERT GUILD CARDS]]
	local GuildDeck = DeckZones.Guild.getObjects()
	for _, items in ipairs(GuildDeck) do
		for i = 1, NumberOfPlayers + 2 do
			items.takeObject({
				position = DeckZones.Age.Age3.getPosition(),
				rotation = DeckZones.Age.Age3.getRotation() + vector(0, 0, 180),
				smooth = false
			})
		end
	end

	-------------------[[ PREPARE WONDERS ]]-------------------

	if ExpansionConfig.Leaders.Base then
		while WonderBags.Leaders.getQuantity() ~= 0 do
			WonderBags.Leaders.takeObject({
				position = WonderBags.Base.getPosition() + Vector(0, 2, 0),
				smooth = false
			})
		end
	end

	if ExpansionConfig.Cities then
		while WonderBags.Cities.getQuantity() ~= 0 do
			WonderBags.Cities.takeObject({
				position = WonderBags.Base.getPosition() + Vector(0, 2, 0),
				smooth = false
			})
		end
	end

	if ExpansionConfig.Armada then
		while WonderBags.Armada.getQuantity() ~= 0 do
			WonderBags.Armada.takeObject({
				position = WonderBags.Base.getPosition() + Vector(0, 2, 0),
				smooth = false
			})
		end
	end

	if WonderExpansionConfig.Promo then
		while WonderBags.Promo.getQuantity() ~= 0 do
			WonderBags.Promo.takeObject({
				position = WonderBags.Base.getPosition() + Vector(0, 2, 0),
				smooth = false
			})
		end
	end

	if WonderExpansionConfig.Other then
		while WonderBags.Other.getQuantity() ~= 0 do
			WonderBags.Other.takeObject({
				position = WonderBags.Base.getPosition() + Vector(0, 2, 0),
				smooth = false
			})
		end
	end

	if WonderExpansionConfig.Collection then
		while WonderBags.Collection.getQuantity() ~= 0 do
			WonderBags.Collection.takeObject({
				position = WonderBags.Base.getPosition() + Vector(0, 2, 0),
				smooth = false
			})
		end
	end

	for i = 0, 200 do
		coroutine.yield(0)
	end

	-------------------[[ FINAL SHUFFLE BEFORE GAME START ]]-------------------

	-- [[SHUFFLE AGE DECKS]]
	local ageDecksToShuffle = {
		DeckZones.Age.Age1,
		DeckZones.Age.Age2,
		DeckZones.Age.Age3
	}

	for ageNum, zone in ipairs(ageDecksToShuffle) do
		if zone and zone.getObjects then
			local deck = zone.getObjects()
			for _, item in ipairs(deck) do
				if item.randomize then
					item.randomize()
				end
			end
		end
	end

	-- [[SHUFFLE LEADER DECK]]
	for _, items in ipairs(DeckZones.Leaders.getObjects()) do
		if items.randomize then
			items.randomize()
		end
	end

	-- [[SHUFFLE ISLAND DECKS]]
	local islandLevels = {
		DeckZones.Island.Level1,
		DeckZones.Island.Level2,
		DeckZones.Island.Level3
	}

	for levelNum, zone in ipairs(islandLevels) do
		if zone and zone.getObjects then
			local deck = zone.getObjects()
			for _, item in ipairs(deck) do
				if item.randomize then
					item.randomize()
				end
			end
		end
	end

	WonderBags.Base.randomize()
	DockyardBag.randomize()

	-------------------[[ MOVE ALL UNUSED CARDS TO THE SIDE ]]-------------------

	-- [[MOVE CITIES]]
	local citiesDecksToMove = {
		{
			source = DeckZones.Cities.Age1,
			destination = FinalDeckZones.Cities.Age1,
		},
		{
			source = DeckZones.Cities.Age2,
			destination = FinalDeckZones.Cities.Age2,
		},
		{
			source = DeckZones.Cities.Age3,
			destination = FinalDeckZones.Cities.Age3,
		}
	}

	for _, deckConfig in ipairs(citiesDecksToMove) do
		if deckConfig.source and deckConfig.destination then
			local deckObjects = deckConfig.source.getObjects()
			for _, item in ipairs(deckObjects) do
				item.setPositionSmooth(deckConfig.destination.getPosition(), false, false)
				item.rotate({0, 90, 0})
			end
		end
	end

	-- [[MOVE ARMADA]]
	local armadaDecksToMove = {
		{
			source = DeckZones.Armada.Age1,
			destination = FinalDeckZones.Armada.Age1,
		},
		{
			source = DeckZones.Armada.Age2,
			destination = FinalDeckZones.Armada.Age2,
		},
		{
			source = DeckZones.Armada.Age3,
			destination = FinalDeckZones.Armada.Age3,
		}
	}

	for _, deckConfig in ipairs(armadaDecksToMove) do
		if deckConfig.source and deckConfig.destination then
			local deckObjects = deckConfig.source.getObjects()
			for _, item in ipairs(deckObjects) do
				item.setPositionSmooth(deckConfig.destination.getPosition(), false, false)
				item.rotate({0, 90, 0})
			end
		end
	end

	-- [[MOVE GUILDS]]
	local guildDecksToMove = DeckZones.Guild.getObjects()
	for _, items in ipairs(guildDecksToMove) do
		--items.setPositionSmooth(FinalDeckZones.Guild.getPosition(), false, false)
		--items.setRotation(FinalDeckZones.Guild.getRotation())
	end

	for i = 0, 200 do
		coroutine.yield(0)
	end

	-- [[DEAL WONDERS]]
	DealWonders()

	-- [[DEAL RANDOM ARMADA BOARDS AND SHIPS]]
	if ExpansionConfig.Armada then
		DealArmada()
	end

	-- Play a sound
	MusicPlayer.setCurrentAudioclip({url=Audio.ReadyAlt, title = "All Players Ready"})
	MusicPlayer.pause()

	return 1
end

function DealStartingCoins()
	local CoinAmount = ExpansionConfig.Leaders.Base and 6 or 3

	for _, player in ipairs(getSeatedPlayers()) do
		local tempPost = Vector(PlayerInfo[player].WonderPos)
		tempPost.y = 2

		for i = 1, CoinAmount do
			tempPost = Vector(PlayerInfo[player].WonderPos)
			tempPost.y = 2
			tempPost.x = tempPost.x + math.random(-100, 100) / 100
			tempPost.z = tempPost.z + math.random(-100, 100) / 100
			CoinBags.Coin1.takeObject({
				position = tempPost,
				rotation = PlayerInfo[player].ComponentRotation,
				smooth = false
			})
			pause(0.1)
		end
	end

	return 1
end

function MakeSetupButtons()
	-- Change default parameters of "LEADERS" BUTTON
	DefaultButtonParams.position = {-0.35, 0.1, -0.02}
	DefaultButtonParams.click_function = "HandleLeadersButton"
	DefaultButtonParams.label = "[    ]"
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "PROMO" BUTTON
	DefaultButtonParams.position = {-0.35, 0.2, 0.08}
	DefaultButtonParams.click_function = "HandlePromoButton"
	DefaultButtonParams.label = "[    ]"
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "EXPERT" BUTTON
	DefaultButtonParams.position = {-0.35, 0.2, 0.18}
	DefaultButtonParams.click_function = "HandleExpertButton"
	DefaultButtonParams.label = "[    ]"
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "CITIES" BUTTON
	DefaultButtonParams.position = {-0.35, 0.2, 0.28}
	DefaultButtonParams.click_function = "HandleCitiesButton"
	DefaultButtonParams.label = "[    ]"
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "ARMADA" BUTTON
	DefaultButtonParams.position = {-0.35, 0.2, 0.38}
	DefaultButtonParams.click_function = "HandleArmadaButton"
	DefaultButtonParams.label = "[    ]"
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "EDIFICE" BUTTON
	DefaultButtonParams.position = {-0.35, 0.2, 0.48}
	DefaultButtonParams.click_function = "HandleEdificeButton"
	DefaultButtonParams.label = "[    ]"
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "RUINS" BUTTON
	DefaultButtonParams.position = {-0.35, 0.2, 0.58}
	DefaultButtonParams.click_function = "HandleRuinsButton"
	DefaultButtonParams.label = "[    ]"
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "MYTHS" BUTTON
	DefaultButtonParams.position = {-0.35, 0.2, 0.68}
	DefaultButtonParams.click_function = "HandleMythsButton"
	DefaultButtonParams.label = "[    ]"
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "FRONTIERS" BUTTON
	DefaultButtonParams.position = {-0.35, 0.2, 0.78}
	DefaultButtonParams.click_function = "HandleFrontiersButton"
	DefaultButtonParams.label = "[    ]"
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "PROMO GUILDS" BUTTON
	DefaultButtonParams.position = {-0.35, 0.2, 0.88}
	DefaultButtonParams.click_function = "HandlePromoGuildsButton"
	DefaultButtonParams.label = "[    ]"
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "COLLECTION" BUTTON
	DefaultButtonParams.position = {0.35, 0.1, -0.02}
	DefaultButtonParams.click_function = "HandleCollectionButton"
	DefaultButtonParams.label = "[    ]"
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "PROMO WONDERS" BUTTON
	DefaultButtonParams.position = {0.35, 0.1, 0.08}
	DefaultButtonParams.click_function = "HandlePromoWondersButton"
	DefaultButtonParams.label = "[    ]"
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "OTHER WONDERS" BUTTON
	DefaultButtonParams.position = {0.35, 0.1, 0.18}
	DefaultButtonParams.click_function = "HandleOtherWondersButton"
	DefaultButtonParams.label = "[    ]"
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "RANDOM" BUTTON
	DefaultButtonParams.position = {0.35, 0.1, 0.58}
	DefaultButtonParams.click_function = "HandleRandomButton"
	DefaultButtonParams.label = "[✓]"
	DefaultButtonParams.font_color={0, 1, 0}
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "DRAFT" BUTTON
	DefaultButtonParams.position = {0.35, 0.1, 0.68}
	DefaultButtonParams.click_function = "HandleDraftButton"
	DefaultButtonParams.label = "[    ]"
	DefaultButtonParams.font_color={1, 1, 1}
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of draft number button
	DefaultButtonParams.position = {0.20, 0.1, 0.68}
	DefaultButtonParams.click_function = "AdjustDraftNumber"
	DefaultButtonParams.label = "[" .. DraftModeNumber .. "]"
	DefaultButtonParams.font_color={1, 1, 1}
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "FORCE LOAD" button
	DefaultButtonParams.position = {0, 0.1, -0.2}
	DefaultButtonParams.click_function = "ForceLoadAllAssets"
	DefaultButtonParams.label = "FORCE LOAD"
	DefaultButtonParams.color = {0.1,0,0,1}
	DefaultButtonParams.font_size = 400
	DefaultButtonParams.scale = {x = 0.1, y = 0.1, z = 0.1}
	DefaultButtonParams.font_color={1,1,0}
	DefaultButtonParams.height = 500
	DefaultButtonParams.width = 2500
	SetupBoard.createButton(DefaultButtonParams)

	-- Change default parameters of "Start Game" BUTTON
	DefaultButtonParams.label = "PLAY"
	DefaultButtonParams.font_color = {1,1,1}
	DefaultButtonParams.position = {0.84, 0.1, 0.9}
	DefaultButtonParams.font_size = 500
	DefaultButtonParams.scale = {x = 0.1, y = 0.1, z = 0.1}
	DefaultButtonParams.height = 600
	DefaultButtonParams.width = 1200
	DefaultButtonParams.font_color={1, 0, 1}
	DefaultButtonParams.click_function = "HandleStartGameButton"
	SetupBoard.createButton(DefaultButtonParams)
end

function MakeSetupBoardText()
	DefaultTextParams.position = {
		SetupBoard.getPosition().x - 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z + 3
	}

	TextOnSetupBoard = {}
	local text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("STANDARD\nEXPANSIONS")
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x - 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z + 0.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("LEADERS")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x - 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 0.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("       ↪PROMO")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x - 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 1.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("       ↪EXPERT")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x - 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 2.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("CITIES")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x - 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 3.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("ARMADA")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x - 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 4.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("EDIFICE")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x - 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 5.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("RUINS")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x - 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 6.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("MYTHS")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x - 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 7.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("FRONTIERS")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x - 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 8.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("PROMO GUILDS")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x + 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z + 3
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("WONDER\nEXPANSIONS")
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x + 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z + 0.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("COLLECTION")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x + 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 0.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("PROMO")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x + 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 1.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("OTHER")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x + 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 3
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("SELECTION\nMODE")
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x + 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 5.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("RANDOM")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)

	DefaultTextParams.position = {
		SetupBoard.getPosition().x + 7,
		SetupBoard.getPosition().y + 0.1,
		SetupBoard.getPosition().z - 6.5
	}

	text = spawnObject(DefaultTextParams)
	text.TextTool.setValue("DRAFT")
	text.TextTool.setFontSize(50)
	text.setLock(true)
	table.insert(TextOnSetupBoard, text)
end
