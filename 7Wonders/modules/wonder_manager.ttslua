function DealWonders()
	GameState = "WonderStage"
	updatePhaseUI("Wonder Selection", "Choose your wonder")

	-- Random Wonders
	if RandomWonders then
		for _, player in ipairs(getSeatedPlayers()) do
			RandomWonderObj[player] = WonderBags.Base.takeObject({
				position = PlayerInfo[player].WonderPos,
				rotation = PlayerInfo[player].ComponentRotation,
				smooth = false,
				callback_function = LockSpawnedObject})

			DefaultButtonParams.width = 600
			DefaultButtonParams.color = {1,1,1,1}
			DefaultButtonParams.font_color = {0, 0, 0}
			DefaultButtonParams.label = "Flip"
			DefaultButtonParams.position = {0, 0.2, -0.5}
			DefaultButtonParams.scale = {0.3, 0.3, 0.3}
			DefaultButtonParams.font_size = 200
			DefaultButtonParams.click_function = "HandleFlipButton"
			RandomWonderObj[player].createButton(DefaultButtonParams)

			DefaultButtonParams.label = "Keep"
			DefaultButtonParams.position = {0, 0.2, 0}
			DefaultButtonParams.click_function = "HandleKeepButton"
			RandomWonderObj[player].createButton(DefaultButtonParams)
		end
	-- Draft Wonders
	elseif DraftMode then
		for _, player in ipairs(getSeatedPlayers()) do
			for i = 1, DraftModeNumber do
				DraftWonders[player][i] = WonderBags.Base.takeObject({
					smooth = false,
					position = PlayerInfo[player].DraftModePos,
					rotation = PlayerInfo[player].ComponentRotation,
					callback_function = LockSpawnedObject})

				DefaultButtonParams.width = 600
				DefaultButtonParams.color = {1,1,1,1}
				DefaultButtonParams.font_color = {0, 0, 0}
				DefaultButtonParams.label = "Flip"
				DefaultButtonParams.position = {0, 0.2, -0.5}
				DefaultButtonParams.scale = {0.3, 0.3, 0.3}
				DefaultButtonParams.font_size = 200
				DefaultButtonParams.click_function = "HandleFlipButton"
				DraftWonders[player][i].createButton(DefaultButtonParams)

				DefaultButtonParams.label = "Keep"
				DefaultButtonParams.position = {0, 0.2, 0}
				DefaultButtonParams.click_function = "HandleKeepButton"
				DraftWonders[player][i].createButton(DefaultButtonParams)

				DefaultButtonParams.label = "<"
				DefaultButtonParams.position = {-1, 0.2, 0}
				DefaultButtonParams.click_function = "HandleCycleLeftButton"
				DraftWonders[player][i].createButton(DefaultButtonParams)

				DefaultButtonParams.label = ">"
				DefaultButtonParams.position = {1, 0.2, 0}
				DefaultButtonParams.click_function = "HandleCycleRightButton"
				DraftWonders[player][i].createButton(DefaultButtonParams)
			end

			DraftWonders[player][1].setPosition(PlayerInfo[player].WonderPos)
		end
	end

	-- [[SET CAMERA POSITIONS]]
	for _, color in ipairs(getSeatedPlayers()) do
    -- Verify the player exists in CameraSettings
    if CameraSettings[color] then
      -- Safely get the wonder position (assuming it exists in _G)
      local wonderPos = nil
      if PlayerInfo[color] then
        wonderPos = PlayerInfo[color].WonderPos
      end

      -- Apply camera lookAt with settings from CameraSettings
      Player[color].lookAt({
        position = wonderPos or {0, 0, 0},
        pitch = CameraSettings[color].pitch,
        yaw = CameraSettings[color].yaw,
        distance = CameraSettings[color].distance
      })
    end
	end
end

function ClearWonderButtons()
	for _, color in ipairs(getSeatedPlayers()) do
		local wonder = GetPlayerCurrentWonder(color)
		if wonder then
			wonder.clearButtons()
		end
	end
end

function GetPlayerCurrentWonder(color)
	if DraftMode then
		return DraftWonders[color][PlayerCurrentlyChosenWonder[color]]
	else
		return RandomWonderObj[color]
	end
end

function IsPlayerWonderFlipped(color)
	-- Based on rotation we know if it's Day or Night
	local tempDefaultRot = PlayerInfo[color].ComponentRotation
	local CurrentWonderObj = GetPlayerCurrentWonder(color)

	local tempCurrentRot = {
		CurrentWonderObj.getRotation().x,
		CurrentWonderObj.getRotation().y,
		CurrentWonderObj.getRotation().z
	}

	return not rotationEquals(tempDefaultRot, tempCurrentRot)
end
