function ForceLoadAllAssets()
  -- Add any bags that should have their contents pre-loaded
  AllBagsToLoad = {
    WonderBags.Collection,
    WonderBags.Base,
    WonderBags.Leader,
    WonderBags.Cities,
    WonderBags.Armada,
    DockyardBag,
    FrontiersBag
  }

  for _, BagToLoad in ipairs(AllBagsToLoad) do
    if BagToLoad and BagToLoad.getObjects then
      for _, Board in ipairs(BagToLoad.getObjects()) do
        BagToLoad.takeObject(
        {
          position = {0, -20, 0},
          smooth = false,
          callback_function = function(spawnedObject)
          Wait.time(function()
          BagToLoad.putObject(spawnedObject)
          end, 2)
          end
        })
      end
    else
      print("Warning: Bag not found or invalid - " .. tostring(BagToLoad))
    end
  end

  return 1
end

function LockSpawnedObject(object)
	object.setLock(true)
	--object.interactable = false
end

function equals(o1, o2, ignore_mt)
    if o1 == o2 then return true end
    local o1Type = type(o1)
    local o2Type = type(o2)
    if o1Type ~= o2Type then return false end
    if o1Type ~= 'table' then return false end

    if not ignore_mt then
        local mt1 = getmetatable(o1)
        if mt1 and mt1.__eq then
            --compare using built in method
            return o1 == o2
        end
    end

    local keySet = {}

    for key1, value1 in pairs(o1) do
        local value2 = o2[key1]
        if value2 == nil or equals(value1, value2, ignore_mt) == false then
            return false
        end
        keySet[key1] = true
    end

    for key2, _ in pairs(o2) do
        if not keySet[key2] then return false end
    end
    return true
end

function printDeckZones()
  print("----- Printing All Deck Zones -----")

  -- Helper function to handle nested printing
  local function printTable(tbl, indent)
    indent = indent or 0
    local spacing = string.rep("  ", indent)

    for key, value in pairs(tbl) do
      if type(value) == "table" then
        print(spacing .. key .. ":")
        printTable(value, indent + 1)
      else
        if value ~= nil and value.getGUID then
          print(spacing .. key .. " = " .. value.getGUID())
        else
          print(spacing .. key .. " = " .. tostring(value))
        end
      end
    end
  end

  printTable(DeckZones)
  print("----- Finished Printing -----")
end
