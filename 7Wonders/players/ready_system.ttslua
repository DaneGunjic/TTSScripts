function UnreadyAllPlayers()
	for i, j in pairs(ReadyList) do
		for m, n in pairs(AllSeatedPlayers) do
			if i == n then
				ReadyList[i] = false
			end
		end
	end

	NumberOfReadyPlayers = 0
end

-- Called when a player pressed the "Ready" button
function ReadyUp(player)
	ReadyList[player.color] = not ReadyList[player.color]

	broadcastToAll(player.steam_name .. " is " .. (ReadyList[player.color] and "Ready" or "Not Ready"))

	if ReadyList[player.color] then
		NumberOfReadyPlayers = NumberOfReadyPlayers + 1
	else
		NumberOfReadyPlayers = NumberOfReadyPlayers - 1
	end

	if NumberOfReadyPlayers == #Player.getPlayers() then
		UnreadyAllPlayers()

		MusicPlayer.setCurrentAudioclip({url="https://sndup.net/pckc/d", title = "All Players Ready"})

		-- Did we finish choosing wonders
		if GameState == "WonderStage" then
			print("FinishWonderStage")
			FinishWonderStage()

			if ExpansionsUsed.Leaders.Base then
				print("PrepareLeaderStage")
				PrepareLeaderStage()
			else
				print("PrepareAge1Stage")
				PrepareAge1Stage()
			end

		-- Did we pass leaders
		elseif GameState == "LeaderDrafting" then
			print("DoLeaderStage")
			DoLeaderStage()
		end
	else
		-- Update UI that shows who is ready
	end
end

function CreateActionButtons(tile)
  tile.createButton({
    click_function = "HandleBuyCard",
    label = "Buy",
    position = {-0.95, 0.1, -0.5},
    rotation = {0, 0 ,0},
    width = 1000,
    height = 1000,
    scale = {x=0.2,y=0.2,z=0.2},
    font_size = 500,
  })

  tile.createButton({
    click_function = "HandleSellCard",
    label = "Sell",
    position = {-0.95, 0.1, 0},
    rotation = {0, 0 ,0},
    width = 1000,
    height = 1000,
    scale = {x=0.2,y=0.2,z=0.2},
    font_size = 500,
  })

  tile.createButton({
    click_function = "HandleBuildWonder",
    label = "Wonder",
    position = {-0.95, 0.1, 0.5},
    rotation = {0, 0 ,0},
    width = 1350,
    height = 1000,
    scale = {x=0.2,y=0.2,z=0.2},
    font_size = 350,
  })
end

function DealCardsToPlayers()
  for color, data in pairs(PlayerCardHolder) do
    local zone = data.Zone
    if zone ~= nil then
      local objectsInZone = zone.getObjects()
      for _, obj in ipairs(objectsInZone) do
				if obj.type == 'Deck' then
	        obj.deal(#obj.getObjects(), color)
	      elseif obj.type == 'Card' then
	        obj.deal(1, color)
				end
      end
    else
        print("Zone not found for player color: " .. color)
    end
  end
end
